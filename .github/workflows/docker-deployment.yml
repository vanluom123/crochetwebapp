name: Docker deployment

on:
  push:
    branches:
      - 'release'
  pull_request:
    branches:
      - 'release'

env:
  ENV: dev
  EMAIL: ${{ secrets.EMAIL }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }}
  APP_PASSWORD: ${{ secrets.APP_PASSWORD }}
  SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  gradle-build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Gradle build
        run: |
          chmod +x gradlew
          ./gradlew clean build
  docker:
    runs-on: ubuntu-latest
    name: Build & push Docker image
    needs: gradle-build
    if: github.event_name == 'push'
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx

      - name: Build and push
        uses: docker/build-push-action@v5
        id: docker_build
        with:
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            EMAIL=${{ env.EMAIL }}
            DB_HOST=${{ env.DB_HOST }}
            DB_PORT=${{ env.DB_PORT }}
            DB_NAME=${{ env.DB_NAME }}
            DB_USERNAME=${{ env.DB_USERNAME }}
            DB_PASSWORD=${{ env.DB_PASSWORD }}
            GOOGLE_CLIENT_ID=${{ env.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ env.GOOGLE_CLIENT_SECRET }}
            TOKEN_SECRET=${{ env.TOKEN_SECRET }}
            APP_PASSWORD=${{ env.APP_PASSWORD }}
            SERVICE_ACCOUNT_KEY=${{ env.SERVICE_ACCOUNT_KEY }}
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/crochet:latest
      - name: Verify
        run: echo ${{ steps.docker_build.outputs.digest }}